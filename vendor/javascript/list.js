// list@2.0.19 downloaded from https://ga.jspm.io/npm:list@2.0.19/dist/index.js

var e={};var r=e&&e.__extends||function(){var extendStatics=function(e,r){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])};return extendStatics(e,r)};return function(e,r){extendStatics(e,r);function __(){this.constructor=e}e.prototype=null===r?Object.create(r):(__.prototype=r.prototype,new __)}}();Object.defineProperty(e,"__esModule",{value:true});var t=32;var i=5;var n=31;function isSetoid(e){return e&&"function"===typeof e["fantasy-land/equals"]}function elementEquals(e,r){return e===r||!!isSetoid(e)&&e["fantasy-land/equals"](r)}function createPath(e,r){var t=r;for(var i=0;i<e;++i)t=new o(void 0,[t]);return t}function copyArray(e){var r=[];for(var t=0;t<e.length;++t)r[t]=e[t];return r}function pushElements(e,r,t,i){for(var n=t;n<t+i;++n)r.push(e[n])}function copyIndices(e,r,t,i,n){for(var a=0;a<n;++a)t[i+a]=e[r+a]}function arrayPrepend(e,r){var t=r.length+1;var i=new Array(t);i[0]=e;for(var n=1;n<t;++n)i[n]=r[n-1];return i}function reverseArray(e){return e.slice().reverse()}function arrayFirst(e){return e[0]}function arrayLast(e){return e[e.length-1]}var a={path:0,index:0,updatedOffset:0};function getPath(e,r,t,o){if(void 0===o&&0!==r){a.updatedOffset=0;e=handleOffset(t,r,e)}var s=e>>t*i&n;if(void 0!==o){while(o[s]<=e)s++;var f=0===s?0:o[s-1];e-=f;a.updatedOffset=r}a.path=s;a.index=e;return a}function updateNode(e,r,t,i,n){var a=getPath(t,i,r,e.sizes),s=a.path,f=a.index,u=a.updatedOffset;var l=copyArray(e.array);l[s]=r>0?updateNode(l[s],r-1,f,u,n):n;return new o(e.sizes,l)}var o=function(){function Node(e,r){this.sizes=e;this.array=r}return Node}();e.Node=o;function cloneNode(e){var r=e.sizes,t=e.array;return new o(void 0===r?void 0:copyArray(r),copyArray(t))}var s=[0];var f=6;var u=63;function getSuffixSize(e){return e.bits&u}function getPrefixSize(e){return e.bits>>f&u}function getDepth(e){return e.bits>>2*f}function setPrefix(e,r){return e<<f|r&~(u<<f)}function setSuffix(e,r){return e|r&~u}function setDepth(e,r){return e<<2*f|r&(u|u<<f)}function incrementPrefix(e){return e+(1<<f)}function incrementSuffix(e){return e+1}function incrementDepth(e){return e+(1<<2*f)}function decrementDepth(e){return e-(1<<2*f)}var l=function(){function List(e,r,t,i,n,a){this.bits=e;this.offset=r;this.length=t;this.prefix=i;this.root=n;this.suffix=a}List.prototype[Symbol.iterator]=function(){return new c(this)};List.prototype.toJSON=function(){return toArray(this)};return List}();e.List=l;function cloneList(e){return new l(e.bits,e.offset,e.length,e.prefix,e.root,e.suffix)}var d=function(){function ListIterator(e,r){this.l=e;this.result={done:false,value:void 0};this.idx=1===r?-1:e.length;this.prefixSize=getPrefixSize(e);this.middleSize=e.length-getSuffixSize(e);if(void 0!==e.root){var t=getDepth(e);this.stack=new Array(t+1);this.indices=new Array(t+1);var i=e.root.array;for(var n=t;0<=n;--n){this.stack[n]=i;var a=1===r?0:i.length-1;this.indices[n]=a;i=i[a].array}this.indices[0]-=r}}return ListIterator}();var c=function(e){r(ForwardListIterator,e);function ForwardListIterator(r){return e.call(this,r,1)||this}ForwardListIterator.prototype.nextInTree=function(){for(var e=0;++this.indices[e]===this.stack[e].length;++e)this.indices[e]=0;for(;0<e;--e)this.stack[e-1]=this.stack[e][this.indices[e]].array};ForwardListIterator.prototype.next=function(){var e;var r=++this.idx;if(r<this.prefixSize)e=this.l.prefix[this.prefixSize-r-1];else if(r<this.middleSize){this.nextInTree();e=this.stack[0][this.indices[0]]}else r<this.l.length?e=this.l.suffix[r-this.middleSize]:this.result.done=true;this.result.value=e;return this.result};return ForwardListIterator}(d);var p=function(e){r(BackwardsListIterator,e);function BackwardsListIterator(r){return e.call(this,r,-1)||this}BackwardsListIterator.prototype.prevInTree=function(){for(var e=0;0===this.indices[e];++e);--this.indices[e];for(;0<e;--e){var r=this.stack[e][this.indices[e]].array;this.stack[e-1]=r;this.indices[e-1]=r.length-1}};BackwardsListIterator.prototype.next=function(){var e;var r=--this.idx;if(this.middleSize<=r)e=this.l.suffix[r-this.middleSize];else if(this.prefixSize<=r){this.prevInTree();e=this.stack[0][this.indices[0]]}else 0<=r?e=this.l.prefix[this.prefixSize-r-1]:this.result.done=true;this.result.value=e;return this.result};return BackwardsListIterator}(d);function backwards(e){var r;return r={},r[Symbol.iterator]=function(){return new p(e)},r}e.backwards=backwards;function emptyPushable(){return new l(0,0,0,[],void 0,[])}function push(e,r){var a=getSuffixSize(r);if(0===r.length){r.bits=setPrefix(1,r.bits);r.prefix=[e]}else if(a<32){r.bits=incrementSuffix(r.bits);r.suffix.push(e)}else if(void 0===r.root){r.root=new o(void 0,r.suffix);r.suffix=[e];r.bits=setSuffix(1,r.bits)}else{var s=new o(void 0,r.suffix);var f=r.length-1-32+1;var u=r.root;var l=getDepth(r);r.suffix=[e];r.bits=setSuffix(1,r.bits);if(f-1<Math.pow(t,l+1))for(;l>=0;--l){var d=f>>l*i&n;if(!(d<u.array.length)){u.array.push(createPath(l-1,s));break}u=u.array[d]}else{r.bits=incrementDepth(r.bits);r.root=new o(void 0,[r.root,createPath(l,s)])}}r.length++;return r}function list(){var e=[];for(var r=0;r<arguments.length;r++)e[r]=arguments[r];var t=emptyPushable();for(var i=0,n=e;i<n.length;i++){var a=n[i];push(a,t)}return t}e.list=list;function empty(){return new l(0,0,0,s,void 0,s)}e.empty=empty;function of(e){return list(e)}e.of=of;function pair(e,r){return new l(2,0,2,s,void 0,[e,r])}e.pair=pair;function from(e){var r=emptyPushable();if(e.length>0&&(void 0!==e[0]||0 in e))for(var t=0;t<e.length;++t)push(e[t],r);else if(Symbol.iterator in e){var i=e[Symbol.iterator]();var n=void 0;while(!(n=i.next()).done)push(n.value,r)}return r}e.from=from;function range(e,r){var t=emptyPushable();for(var i=e;i<r;++i)push(i,t);return t}e.range=range;function repeat(e,r){var t=emptyPushable();while(--r>=0)push(e,t);return t}e.repeat=repeat;function times(e,r){var t=emptyPushable();for(var i=0;i<r;i++)push(e(i),t);return t}e.times=times;function nodeNthDense(e,r,t){var a=e;for(;r>=0;--r)a=a.array[t>>r*i&n];return a}function handleOffset(e,r,t){t+=r;for(;e>=0;--e){t-=r&n<<e*i;if(0!==(t>>e*i&n))break}return t}function nodeNth(e,r,t,a){var o;var s=e;while(void 0!==s.sizes){o=a>>r*i&n;while(s.sizes[o]<=a)o++;if(0!==o){a-=s.sizes[o-1];t=0}r--;s=s.array[o]}return nodeNthDense(s,r,0===t?a:handleOffset(r,t,a))}function nth(e,r){if(!(e<0||r.length<=e)){var t=getPrefixSize(r);var i=getSuffixSize(r);if(e<t)return r.prefix[t-e-1];if(e>=r.length-i)return r.suffix[e-(r.length-i)];var n=r.offset;var a=getDepth(r);return void 0===r.root.sizes?nodeNthDense(r.root,a,0===n?e-t:handleOffset(a,n,e-t)):nodeNth(r.root,a,n,e-t)}}e.nth=nth;function setSizes(e,r){var t=0;var i=[];for(var n=0;n<e.array.length;++n){t+=sizeOfSubtree(e.array[n],r-1);i[n]=t}e.sizes=i;return e}function sizeOfSubtree(e,r){if(0!==r){if(void 0!==e.sizes)return arrayLast(e.sizes);var t=sizeOfSubtree(arrayLast(e.array),r-1);return(e.array.length-1<<r*i)+t}return e.array.length}function affixPush(e,r,t){if(r.length===t){r.push(e);return r}var i=[];copyIndices(r,0,i,0,t);i.push(e);return i}function prepend(e,r){var t=getPrefixSize(r);if(t<32)return new l(incrementPrefix(r.bits),r.offset,r.length+1,affixPush(e,r.prefix,t),r.root,r.suffix);var i=cloneList(r);prependNodeToTree(i,reverseArray(r.prefix));var n=[e];i.prefix=n;i.length++;i.bits=setPrefix(1,i.bits);return i}e.prepend=prepend;function copyLeft(e,r){var t=cloneNode(e.root);e.root=t;for(var i=1;i<r;++i){var n=0;if(void 0!==t.sizes)for(var a=0;a<t.sizes.length;++a)t.sizes[a]+=32;var o=cloneNode(t.array[n]);t.array[n]=o;t=o}return t}function nodePrepend(e,r,t){var i=arrayPrepend(e,t.array);var n=void 0;if(void 0!==t.sizes){n=new Array(t.sizes.length+1);n[0]=r;for(var a=0;a<t.sizes.length;++a)n[a+1]=t.sizes[a]+r}return new o(n,i)}function prependTopTree(e,r,i){var n;if(e.root.array.length<t){n=Math.pow(32,r)-32;e.root=new o(void 0,arrayPrepend(createPath(r-1,i),e.root.array))}else{e.bits=incrementDepth(e.bits);var a=void 0===e.root.sizes?void 0:[32,arrayLast(e.root.sizes)+32];n=0===r?0:Math.pow(32,r+1)-32;e.root=new o(a,[createPath(r,i),e.root])}return n}function prependNodeToTree(e,r){if(void 0===e.root){if(0===getSuffixSize(e)){e.bits=setSuffix(r.length,e.bits);e.suffix=r}else e.root=new o(void 0,r);return e}var i=new o(void 0,r);var n=getDepth(e);var a=0;if(void 0!==e.root.sizes){var s=0;var f=0;var u=e.root;while(void 0!==u.sizes&&f<n){++f;u.array.length<32&&(s=f);u=u.array[0]}if(0!==e.offset){var l=copyLeft(e,f);for(var d=0;d<l.sizes.length;++d)l.sizes[d]+=t;l.array[0]=prependDense(l.array[0],n-f,e.offset,i);e.offset=e.offset-t;return e}if(0===s)e.offset=prependTopTree(e,n,i);else{var c;var p=void 0;if(s>1){c=copyLeft(e,s-1);p=c.array[0]}else{c=void 0;p=e.root}var h=createPath(n-s,i);e.offset=Math.pow(32,n-s+1)-32;var v=nodePrepend(h,32,p);void 0===c?e.root=v:c.array[0]=v}return e}if(0!==e.offset){a=e.offset-t;e.root=prependDense(e.root,n,e.offset,i)}else a=prependTopTree(e,n,i);e.offset=a;return e}function prependDense(e,r,t,a){var s=t>>r*i&n;var f=(t-1>>r*i&n)-s;if(f<0)return new o(void 0,arrayPrepend(createPath(r-1,a),e.array));var u=copyArray(e.array);u[0]=prependDense(u[0],r-1,t,a);return new o(void 0,u)}function append(e,r){var t=getSuffixSize(r);if(t<32)return new l(incrementSuffix(r.bits),r.offset,r.length+1,r.prefix,r.root,affixPush(e,r.suffix,t));var i=[e];var n=cloneList(r);appendNodeToTree(n,r.suffix);n.suffix=i;n.length++;n.bits=setSuffix(1,n.bits);return n}e.append=append;function length(e){return e.length}e.length=length;function first(e){var r=getPrefixSize(e);return 0!==r?e.prefix[r-1]:0!==e.length?e.suffix[0]:void 0}e.first=first;e.head=first;function last(e){var r=getSuffixSize(e);return 0!==r?e.suffix[r-1]:0!==e.length?e.prefix[0]:void 0}e.last=last;function mapArray(e,r){var t=new Array(r.length);for(var i=0;i<r.length;++i)t[i]=e(r[i]);return t}function mapNode(e,r,t){if(0!==t){var i=r.array;var n=new Array(i.length);for(var a=0;a<i.length;++a)n[a]=mapNode(e,i[a],t-1);return new o(r.sizes,n)}return new o(void 0,mapArray(e,r.array))}function mapPrefix(e,r,t){var i=new Array(t);for(var n=t-1;0<=n;--n)i[n]=e(r[n]);return i}function mapAffix(e,r,t){var i=new Array(t);for(var n=0;n<t;++n)i[n]=e(r[n]);return i}function map(e,r){return new l(r.bits,r.offset,r.length,mapPrefix(e,r.prefix,getPrefixSize(r)),void 0===r.root?void 0:mapNode(e,r.root,getDepth(r)),mapAffix(e,r.suffix,getSuffixSize(r)))}e.map=map;function pluck(e,r){return map((function(r){return r[e]}),r)}e.pluck=pluck;function foldlSuffix(e,r,t,i){for(var n=0;n<i;++n)r=e(r,t[n]);return r}function foldlPrefix(e,r,t,i){for(var n=i-1;0<=n;--n)r=e(r,t[n]);return r}function foldlNode(e,r,t,i){var n=t.array;if(0===i)return foldlSuffix(e,r,n,n.length);for(var a=0;a<n.length;++a)r=foldlNode(e,r,n[a],i-1);return r}function foldl(e,r,t){var i=getSuffixSize(t);var n=getPrefixSize(t);r=foldlPrefix(e,r,t.prefix,n);void 0!==t.root&&(r=foldlNode(e,r,t.root,getDepth(t)));return foldlSuffix(e,r,t.suffix,i)}e.foldl=foldl;e.reduce=foldl;function traverse(e,r,t){return foldr((function(e,t){return t["fantasy-land/ap"](r(e)["fantasy-land/map"]((function(e){return function(r){return prepend(e,r)}})))}),e["fantasy-land/of"](empty()),t)}e.traverse=traverse;function sequence(e,r){return traverse(e,(function(e){return e}),r)}e.sequence=sequence;function scan(e,r,t){return foldl((function(r,t){return push(e(last(r),t),r)}),push(r,emptyPushable()),t)}e.scan=scan;function forEach(e,r){foldl((function(r,t){return e(t)}),void 0,r)}e.forEach=forEach;function filter(e,r){return foldl((function(r,t){return e(t)?push(t,r):r}),emptyPushable(),r)}e.filter=filter;function reject(e,r){return foldl((function(r,t){return e(t)?r:push(t,r)}),emptyPushable(),r)}e.reject=reject;function partition(e,r){return foldl((function(r,t){return e(t)?push(t,r[0]):push(t,r[1]),r}),[emptyPushable(),emptyPushable()],r)}e.partition=partition;function join(e,r){return foldl((function(r,t){return 0===r.length?t:r+e+t}),"",r)}e.join=join;function foldrSuffix(e,r,t,i){var n=r;for(var a=i-1;0<=a;--a)n=e(t[a],n);return n}function foldrPrefix(e,r,t,i){var n=r;for(var a=0;a<i;++a)n=e(t[a],n);return n}function foldrNode(e,r,t,i){var n=t.array;if(0===i)return foldrSuffix(e,r,n,n.length);var a=r;for(var o=n.length-1;0<=o;--o)a=foldrNode(e,a,n[o],i-1);return a}function foldr(e,r,t){var i=getSuffixSize(t);var n=getPrefixSize(t);var a=foldrSuffix(e,r,t.suffix,i);void 0!==t.root&&(a=foldrNode(e,a,t.root,getDepth(t)));return foldrPrefix(e,a,t.prefix,n)}e.foldr=foldr;e.reduceRight=foldr;function ap(e,r){return flatten(map((function(e){return map(e,r)}),e))}e.ap=ap;function flatten(e){return foldl(concat,empty(),e)}e.flatten=flatten;function flatMap(e,r){return flatten(map(e,r))}e.flatMap=flatMap;e.chain=flatMap;function foldlArrayCb(e,r,t,i,n){for(var a=i;a<n&&e(t[a],r);++a);return a===n}function foldrArrayCb(e,r,t,i,n){for(var a=i-1;n<=a&&e(t[a],r);--a);return a===n-1}function foldlNodeCb(e,r,t,i){var n=t.array;if(0===i)return foldlArrayCb(e,r,n,0,n.length);var a=n.length;for(var o=0;o<a;++o)if(!foldlNodeCb(e,r,n[o],i-1))return false;return true}function foldlCb(e,r,t){var i=getPrefixSize(t);if(!foldrArrayCb(e,r,t.prefix,i,0)||void 0!==t.root&&!foldlNodeCb(e,r,t.root,getDepth(t)))return r;var n=getSuffixSize(t);foldlArrayCb(e,r,t.suffix,0,n);return r}function foldrNodeCb(e,r,t,i){var n=t.array;if(0===i)return foldrArrayCb(e,r,n,n.length,0);for(var a=n.length-1;0<=a;--a)if(!foldrNodeCb(e,r,n[a],i-1))return false;return true}function foldrCb(e,r,t){var i=getSuffixSize(t);var n=getPrefixSize(t);if(!foldrArrayCb(e,r,t.suffix,i,0)||void 0!==t.root&&!foldrNodeCb(e,r,t.root,getDepth(t)))return r;var a=t.prefix;foldlArrayCb(e,r,t.prefix,a.length-n,a.length);return r}function foldlWhileCb(e,r){if(false===r.predicate(r.result,e))return false;r.result=r.f(r.result,e);return true}function foldlWhile(e,r,t,i){return foldlCb(foldlWhileCb,{predicate:e,f:r,result:t},i).result}e.foldlWhile=foldlWhile;e.reduceWhile=foldlWhile;function everyCb(e,r){return r.result=r.predicate(e)}function every(e,r){return foldlCb(everyCb,{predicate:e,result:true},r).result}e.every=every;e.all=every;function someCb(e,r){return!(r.result=r.predicate(e))}function some(e,r){return foldlCb(someCb,{predicate:e,result:false},r).result}e.some=some;e.any=some;function none(e,r){return!some(e,r)}e.none=none;function findCb(e,r){if(r.predicate(e)){r.result=e;return false}return true}function find(e,r){return foldlCb(findCb,{predicate:e,result:void 0},r).result}e.find=find;function findLast(e,r){return foldrCb(findCb,{predicate:e,result:void 0},r).result}e.findLast=findLast;function indexOfCb(e,r){++r.index;return!(r.found=elementEquals(e,r.element))}function indexOf(e,r){var t={element:e,found:false,index:-1};foldlCb(indexOfCb,t,r);return t.found?t.index:-1}e.indexOf=indexOf;function lastIndexOf(e,r){var t={element:e,found:false,index:0};foldrCb(indexOfCb,t,r);return t.found?r.length-t.index:-1}e.lastIndexOf=lastIndexOf;function findIndexCb(e,r){++r.index;return!(r.found=r.predicate(e))}function findIndex(e,r){var t=foldlCb(findIndexCb,{predicate:e,found:false,index:-1},r),i=t.found,n=t.index;return i?n:-1}e.findIndex=findIndex;var h={element:void 0,result:false};function containsCb(e,r){return!(r.result=e===r.element)}function includes(e,r){h.element=e;h.result=false;return foldlCb(containsCb,h,r).result}e.includes=includes;e.contains=includes;function equalsCb(e,r){var t=r.iterator.next().value;return r.equals=r.f(t,e)}function equals(e,r){return equalsWith(elementEquals,e,r)}e.equals=equals;function equalsWith(e,r,t){if(r===t)return true;if(r.length!==t.length)return false;var i={iterator:t[Symbol.iterator](),equals:true,f:e};return foldlCb(equalsCb,i,r).equals}e.equalsWith=equalsWith;var v=2;function createConcatPlan(e){var r=[];var i=0;for(var n=0;n<e.length;++n){i+=e[n].array.length;r[n]=e[n].array.length}var a=Math.ceil(i/t);var o=e.length;var s=0;if(!(a+v>=o)){while(a+v<o){while(r[s]>t-v/2)++s;var f=r[s];do{var u=Math.min(f+r[s+1],t);r[s]=u;f-=u-r[s+1];++s}while(f>0);for(var l=s;l<=o-1;++l)r[l]=r[l+1];--s;--o}r.length=o;return r}}function concatNodeMerge(e,r,t){var i=[];if(void 0!==e)for(var n=0;n<e.array.length-1;++n)i.push(e.array[n]);for(var n=0;n<r.array.length;++n)i.push(r.array[n]);if(void 0!==t)for(var n=1;n<t.array.length;++n)i.push(t.array[n]);return i}function executeConcatPlan(e,r,t){var i=[];var n=0;var a=0;for(var s=0,f=r;s<f.length;s++){var u=f[s];var l=e[n].array;if(u===l.length&&0===a){i.push(e[n]);++n}else{var d=new o(void 0,[]);while(u>0){var c=l.length-a;var p=Math.min(u,c);pushElements(l,d.array,a,p);if(u>=c){++n;l=e[n].array;a=0}else a+=p;u-=p}t>1&&setSizes(d,t-1);i.push(d)}}return i}function rebalance(e,r,i,n,a){var s=concatNodeMerge(e,r,i);var f=createConcatPlan(s);var u=void 0!==f?executeConcatPlan(s,f,n):s;return u.length<=t?new o(void 0,true===a?u:[setSizes(new o(void 0,u),n)]):new o(void 0,[setSizes(new o(void 0,u.slice(0,t)),n),setSizes(new o(void 0,u.slice(t)),n)])}function concatSubTree(e,r,t,i,n){if(r>i){var a=concatSubTree(arrayLast(e.array),r-1,t,i,false);return rebalance(e,a,void 0,r,n)}if(r<i){var a=concatSubTree(e,r,arrayFirst(t.array),i-1,false);return rebalance(void 0,a,t,i,n)}if(0===r)return new o(void 0,[e,t]);var a=concatSubTree(arrayLast(e.array),r-1,arrayFirst(t.array),i-1,false);return rebalance(e,a,t,r,n)}function getHeight(e){return e.array[0]instanceof o?1+getHeight(e.array[0]):0}function appendNodeToTree(e,r){if(void 0===e.root){if(0===getPrefixSize(e)){e.bits=setPrefix(r.length,e.bits);e.prefix=reverseArray(r)}else e.root=new o(void 0,r);return e}var i=getDepth(e);var a=handleOffset(i,e.offset,e.length-1-getPrefixSize(e));var s=0;var f=0;var u=5*i;var l=e.root;if(Math.pow(32,i+1)<a){u=0;f=i}while(u>5){var d=void 0;if(void 0===l.sizes){d=a>>u&n;a&=~(n<<u)}else{d=l.array.length-1;a-=l.sizes[d-1]}f++;d<n&&(s=f);l=l.array[d];if(void 0===l){s=f;u=5}u-=5}if(0!==u){f++;l.array.length<t&&(s=f)}var c=new o(void 0,r);if(0===s){var p=0===f?c:createPath(f,c);var h=new o(void 0,[e.root,p]);e.root=h;e.bits=incrementDepth(e.bits)}else{var v=copyFirstK(e,s,r.length);v.array.push(createPath(i-s,c))}return e}function copyFirstK(e,r,t){var i=cloneNode(e.root);e.root=i;for(var n=1;n<r;++n){var a=i.array.length-1;void 0!==i.sizes&&(i.sizes[a]+=t);var o=cloneNode(i.array[a]);i.array[a]=o;i=o}void 0!==i.sizes&&i.sizes.push(arrayLast(i.sizes)+t);return i}var y=new Array(3);function concatAffixes(e,r){var t=0;var i=0;var n=0;var a=getSuffixSize(e);y[t]=[];for(n=0;n<a;++n)y[t][i++]=e.suffix[n];a=getPrefixSize(r);for(n=0;n<a;++n){if(32===i){i=0;++t;y[t]=[]}y[t][i++]=r.prefix[a-1-n]}a=getSuffixSize(r);for(n=0;n<a;++n){if(32===i){i=0;++t;y[t]=[]}y[t][i++]=r.suffix[n]}return t}function concat(e,r){if(0===e.length)return r;if(0===r.length)return e;var t=e.length+r.length;var a=getSuffixSize(r);var o=cloneList(e);if(void 0===r.root){var s=concatAffixes(e,r);for(var f=0;f<s;++f){o=appendNodeToTree(o,y[f]);o.length+=y[f].length;y[f]=void 0}o.length=t;o.suffix=y[s];o.bits=setSuffix(y[s].length,o.bits);y[s]=void 0;return o}var u=getSuffixSize(e);if(u>0){o=appendNodeToTree(o,e.suffix.slice(0,u));o.length+=u}o=appendNodeToTree(o,r.prefix.slice(0,getPrefixSize(r)).reverse());var l=concatSubTree(o.root,getDepth(o),r.root,getDepth(r),true);var d=getHeight(l);setSizes(l,d);o.root=l;o.offset&=~(n<<getDepth(e)*i);o.length=t;o.bits=setSuffix(a,setDepth(d,o.bits));o.suffix=r.suffix;return o}e.concat=concat;function update(e,r,t){if(e<0||t.length<=e)return t;var i=getPrefixSize(t);var n=getSuffixSize(t);var a=cloneList(t);if(e<i){var o=copyArray(a.prefix);o[o.length-e-1]=r;a.prefix=o}else if(e>=t.length-n){var s=copyArray(a.suffix);s[e-(t.length-n)]=r;a.suffix=s}else a.root=updateNode(t.root,getDepth(t),e-i,t.offset,r);return a}e.update=update;function adjust(e,r,t){return e<0||t.length<=e?t:update(e,r(nth(e,t)),t)}e.adjust=adjust;var g;function sliceNode(e,r,t,i,n,a,s){var f=e.array.slice(i,n+1);void 0!==a&&(f[0]=a);void 0!==s&&(f[f.length-1]=s);var u=e.sizes;if(void 0!==u){u=u.slice(i,n+1);var l=0!==i?e.sizes[i-1]:0;if(void 0!==a)if(void 0!==a.sizes){var d=e.array[i];l+=arrayLast(d.sizes)-arrayLast(a.sizes)}else l+=(r-l&~31)+32;for(var c=0;c<u.length;++c)u[c]-=l;if(void 0!==s){var p=sizeOfSubtree(e.array[n],t-1)-sizeOfSubtree(s,t-1);u[u.length-1]-=p}}return new o(u,f)}var x=0;function sliceLeft(e,r,t,n,a){var o=getPath(t,n,r,e.sizes),s=o.path,f=o.index,u=o.updatedOffset;if(0!==r){var l=sliceLeft(e.array[s],r-1,f,u,false);if(void 0===l){++s;if(s===e.array.length)return}void 0===e.sizes&&false===a&&(x|=32-(e.array.length-s)<<r*i);return sliceNode(e,t,r,s,e.array.length-1,l,void 0)}g=e.array.slice(s).reverse()}function sliceRight(e,r,t,i){var n=getPath(t,i,r,e.sizes),a=n.path,s=n.index;if(0!==r){var f=sliceRight(e.array[a],r-1,s,0===a?i:0);if(void 0===f){--a;if(-1===a)return}var u=e.array.slice(0,a+1);void 0!==f&&(u[u.length-1]=f);var l=e.sizes;if(void 0!==l){l=l.slice(0,a+1);if(void 0!==f){var d=sizeOfSubtree(e.array[a],r-1)-sizeOfSubtree(f,r-1);l[l.length-1]-=d}}return new o(l,u)}g=e.array.slice(0,a+1)}function sliceTreeList(e,r,t,i,n,a){var f=t.sizes;var u=getPath(e,n,i,f),l=u.path,d=u.index;var c=getPath(r,n,i,f),p=c.path,h=c.index;if(0===i){a.prefix=s;a.suffix=t.array.slice(l,p+1);a.root=void 0;a.bits=setSuffix(p-l+1,0);return a}if(l===p){a.bits=decrementDepth(a.bits);return sliceTreeList(d,h,t.array[l],i-1,0===l?n:0,a)}var v=sliceRight(t.array[p],i-1,h,0);a.bits=setSuffix(g.length,a.bits);a.suffix=g;void 0===v&&--p;x=0;var y=sliceLeft(t.array[l],i-1,d,0===l?n:0,l===p);a.offset=x;a.bits=setPrefix(g.length,a.bits);a.prefix=g;void 0===y&&++l;if(l>=p)if(l>p){a.bits=setDepth(0,a.bits);a.root=void 0}else{a.bits=decrementDepth(a.bits);var b=void 0!==v?v:void 0!==y?y:t.array[l];a.root=new o(b.sizes,b.array)}else a.root=sliceNode(t,e,i,l,p,y,v);return a}function slice(e,r,t){var i=t.bits,n=t.length;r=Math.min(n,r);e<0&&(e=n+e);r<0&&(r=n+r);if(r<=e||r<=0||n<=e)return empty();if(e<=0&&n<=r)return t;var a=r-e;var o=getPrefixSize(t);var f=getSuffixSize(t);if(r<=o)return new l(setPrefix(a,0),0,a,t.prefix.slice(o-r,o-e),void 0,s);var u=n-f;if(u<=e)return new l(setSuffix(a,0),0,a,s,void 0,t.suffix.slice(e-u,r-u));var d=cloneList(t);d.length=a;if(o<=e&&r<=u){sliceTreeList(e-o+t.offset,r-o+t.offset-1,t.root,getDepth(t),t.offset,d);return d}if(0<e)if(e<o){d.prefix=t.prefix.slice(0,o-e);i=setPrefix(o-e,i)}else{x=0;d.root=sliceLeft(d.root,getDepth(t),e-o,t.offset,true);d.offset=x;void 0===d.root&&(i=setDepth(0,i));i=setPrefix(g.length,i);o=g.length;d.prefix=g}if(r<n)if(n-r<f){i=setSuffix(f-(n-r),i);d.suffix=t.suffix.slice(0,f-(n-r))}else{d.root=sliceRight(d.root,getDepth(t),r-o-1,d.offset);if(void 0===d.root){i=setDepth(0,i);d.offset=0}i=setSuffix(g.length,i);d.suffix=g}d.bits=i;return d}e.slice=slice;function take(e,r){return slice(0,e,r)}e.take=take;function findNotIndexCb(e,r){if(r.predicate(e)){++r.index;return true}return false}function takeWhile(e,r){var t=foldlCb(findNotIndexCb,{predicate:e,index:0},r).index;return slice(0,t,r)}e.takeWhile=takeWhile;function takeLastWhile(e,r){var t=foldrCb(findNotIndexCb,{predicate:e,index:0},r).index;return slice(r.length-t,r.length,r)}e.takeLastWhile=takeLastWhile;function dropWhile(e,r){var t=foldlCb(findNotIndexCb,{predicate:e,index:0},r).index;return slice(t,r.length,r)}e.dropWhile=dropWhile;function dropRepeats(e){return dropRepeatsWith(elementEquals,e)}e.dropRepeats=dropRepeats;function dropRepeatsWith(e,r){return foldl((function(r,t){return 0!==r.length&&e(last(r),t)?r:push(t,r)}),emptyPushable(),r)}e.dropRepeatsWith=dropRepeatsWith;function takeLast(e,r){return slice(r.length-e,r.length,r)}e.takeLast=takeLast;function splitAt(e,r){return[slice(0,e,r),slice(e,r.length,r)]}e.splitAt=splitAt;function splitWhen(e,r){var t=findIndex(e,r);return-1===t?[r,empty()]:splitAt(t,r)}e.splitWhen=splitWhen;function splitEvery(e,r){var t=foldl((function(r,t){var i=r.l2,n=r.buffer;push(t,n);return n.length===e?{l2:push(n,i),buffer:emptyPushable()}:{l2:i,buffer:n}}),{l2:emptyPushable(),buffer:emptyPushable()},r),i=t.l2,n=t.buffer;return 0===n.length?i:push(n,i)}e.splitEvery=splitEvery;function remove(e,r,t){return concat(slice(0,e,t),slice(e+r,t.length,t))}e.remove=remove;function drop(e,r){return slice(e,r.length,r)}e.drop=drop;function dropLast(e,r){return slice(0,r.length-e,r)}e.dropLast=dropLast;function pop(e){return slice(0,-1,e)}e.pop=pop;e.init=pop;function tail(e){return slice(1,e.length,e)}e.tail=tail;function arrayPush(e,r){e.push(r);return e}function toArray(e){return foldl(arrayPush,[],e)}e.toArray=toArray;function insert(e,r,t){return concat(append(r,slice(0,e,t)),slice(e,t.length,t))}e.insert=insert;function insertAll(e,r,t){return concat(concat(slice(0,e,t),r),slice(e,t.length,t))}e.insertAll=insertAll;function reverse(e){return foldl((function(e,r){return prepend(r,e)}),empty(),e)}e.reverse=reverse;function isList(e){return"object"===typeof e&&Array.isArray(e.suffix)}e.isList=isList;function zip(e,r){return zipWith((function(e,r){return[e,r]}),e,r)}e.zip=zip;function zipWith(e,r,t){var i=t.length<r.length;var n=(i?r:t)[Symbol.iterator]();return map((function(r){var t=n.next().value;return i?e(t,r):e(r,t)}),i?t:r)}e.zipWith=zipWith;function isPrimitive(e){return"number"===typeof e||"string"===typeof e}function comparePrimitive(e,r){return e===r?0:e<r?-1:1}var b="fantasy-land/lte";function compareOrd(e,r){return e[b](r)?r[b](e)?0:-1:1}function sort(e){return 0===e.length?e:isPrimitive(first(e))?from(toArray(e).sort(comparePrimitive)):sortWith(compareOrd,e)}e.sort=sort;function sortWith(e,r){var t=[];var i=0;forEach((function(e){return t.push({idx:i++,elm:e})}),r);t.sort((function(r,t){var i=r.elm,n=r.idx;var a=t.elm,o=t.idx;var s=e(i,a);return 0!==s?s:n<o?-1:1}));var n=emptyPushable();for(var a=0;a<t.length;++a)push(t[a].elm,n);return n}e.sortWith=sortWith;function sortBy(e,r){if(0===r.length)return r;var t=[];var i=0;forEach((function(r){return t.push({idx:i++,elm:r,prop:e(r)})}),r);var n=isPrimitive(t[0].prop)?comparePrimitive:compareOrd;t.sort((function(e,r){var t=e.prop,i=e.idx;var a=r.prop,o=r.idx;var s=n(t,a);return 0!==s?s:i<o?-1:1}));var a=emptyPushable();for(var o=0;o<t.length;++o)push(t[o].elm,a);return a}e.sortBy=sortBy;function group(e){return groupWith(elementEquals,e)}e.group=group;function groupWith(e,r){var t=emptyPushable();var i=emptyPushable();forEach((function(r){if(0!==i.length&&!e(last(i),r)){push(i,t);i=emptyPushable()}push(r,i)}),r);return 0===i.length?t:push(i,t)}e.groupWith=groupWith;function intersperse(e,r){return pop(foldl((function(r,t){return push(e,push(t,r))}),emptyPushable(),r))}e.intersperse=intersperse;function isEmpty(e){return 0===e.length}e.isEmpty=isEmpty;const m=e.__esModule,z=e.head,S=e.reduce,P=e.reduceRight,w=e.chain,L=e.reduceWhile,W=e.all,C=e.any,A=e.contains,N=e.init;const k=e.Node,O=e.List,D=e.backwards,I=e.list,T=e.empty,q=e.of,E=e.pair,_=e.from,j=e.range,M=e.repeat,R=e.times,B=e.nth,F=e.prepend,H=e.append,K=e.length,J=e.first,G=e.last,Q=e.map,U=e.pluck,V=e.foldl,X=e.traverse,Y=e.sequence,Z=e.scan,$=e.forEach,ee=e.filter,re=e.reject,te=e.partition,ie=e.join,ne=e.foldr,ae=e.ap,oe=e.flatten,se=e.flatMap,fe=e.foldlWhile,ue=e.every,le=e.some,de=e.none,ce=e.find,pe=e.findLast,he=e.indexOf,ve=e.lastIndexOf,ye=e.findIndex,ge=e.includes,xe=e.equals,be=e.equalsWith,me=e.concat,ze=e.update,Se=e.adjust,Pe=e.slice,we=e.take,Le=e.takeWhile,We=e.takeLastWhile,Ce=e.dropWhile,Ae=e.dropRepeats,Ne=e.dropRepeatsWith,ke=e.takeLast,Oe=e.splitAt,De=e.splitWhen,Ie=e.splitEvery,Te=e.remove,qe=e.drop,Ee=e.dropLast,_e=e.pop,je=e.tail,Me=e.toArray,Re=e.insert,Be=e.insertAll,Fe=e.reverse,He=e.isList,Ke=e.zip,Je=e.zipWith,Ge=e.sort,Qe=e.sortWith,Ue=e.sortBy,Ve=e.group,Xe=e.groupWith,Ye=e.intersperse,Ze=e.isEmpty;export default e;export{O as List,k as Node,m as __esModule,Se as adjust,W as all,C as any,ae as ap,H as append,D as backwards,w as chain,me as concat,A as contains,qe as drop,Ee as dropLast,Ae as dropRepeats,Ne as dropRepeatsWith,Ce as dropWhile,T as empty,xe as equals,be as equalsWith,ue as every,ee as filter,ce as find,ye as findIndex,pe as findLast,J as first,se as flatMap,oe as flatten,V as foldl,fe as foldlWhile,ne as foldr,$ as forEach,_ as from,Ve as group,Xe as groupWith,z as head,ge as includes,he as indexOf,N as init,Re as insert,Be as insertAll,Ye as intersperse,Ze as isEmpty,He as isList,ie as join,G as last,ve as lastIndexOf,K as length,I as list,Q as map,de as none,B as nth,q as of,E as pair,te as partition,U as pluck,_e as pop,F as prepend,j as range,S as reduce,P as reduceRight,L as reduceWhile,re as reject,Te as remove,M as repeat,Fe as reverse,Z as scan,Y as sequence,Pe as slice,le as some,Ge as sort,Ue as sortBy,Qe as sortWith,Oe as splitAt,Ie as splitEvery,De as splitWhen,je as tail,we as take,ke as takeLast,We as takeLastWhile,Le as takeWhile,R as times,Me as toArray,X as traverse,ze as update,Ke as zip,Je as zipWith};

