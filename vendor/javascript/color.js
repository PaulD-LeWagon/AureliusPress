// color@5.0.1 downloaded from https://ga.jspm.io/npm:color@5.0.1/index.js

import t from"color-string";import o from"color-convert";const r=["keyword","gray","hex"];const e={};for(const t of Object.keys(o))e[[...o[t].labels].sort().join("")]=t;const n={};function s(l,h){if(!(this instanceof s))return new s(l,h);h&&h in r&&(h=null);if(h&&!(h in o))throw new Error("Unknown model: "+h);let i;let a;if(l==null){this.model="rgb";this.color=[0,0,0];this.valpha=1}else if(l instanceof s){this.model=l.model;this.color=[...l.color];this.valpha=l.valpha}else if(typeof l==="string"){const r=t.get(l);if(r===null)throw new Error("Unable to parse color from string: "+l);this.model=r.model;a=o[this.model].channels;this.color=r.value.slice(0,a);this.valpha=typeof r.value[a]==="number"?r.value[a]:1}else if(l.length>0){this.model=h||"rgb";a=o[this.model].channels;const t=Array.prototype.slice.call(l,0,a);this.color=u(t,a);this.valpha=typeof l[a]==="number"?l[a]:1}else if(typeof l==="number"){this.model="rgb";this.color=[l>>16&255,l>>8&255,l&255];this.valpha=1}else{this.valpha=1;const t=Object.keys(l);if("alpha"in l){t.splice(t.indexOf("alpha"),1);this.valpha=typeof l.alpha==="number"?l.alpha:0}const r=t.sort().join("");if(!(r in e))throw new Error("Unable to parse color from object: "+JSON.stringify(l));this.model=e[r];const{labels:n}=o[this.model];const s=[];for(i=0;i<n.length;i++)s.push(l[n[i]]);this.color=u(s)}if(n[this.model]){a=o[this.model].channels;for(i=0;i<a;i++){const t=n[this.model][i];t&&(this.color[i]=t(this.color[i]))}}this.valpha=Math.max(0,Math.min(1,this.valpha));Object.freeze&&Object.freeze(this)}s.prototype={toString(){return this.string()},toJSON(){return this[this.model]()},string(o){let r=this.model in t.to?this:this.rgb();r=r.round(typeof o==="number"?o:1);const e=r.valpha===1?r.color:[...r.color,this.valpha];return t.to[r.model](...e)},percentString(o){const r=this.rgb().round(typeof o==="number"?o:1);const e=r.valpha===1?r.color:[...r.color,this.valpha];return t.to.rgb.percent(...e)},array(){return this.valpha===1?[...this.color]:[...this.color,this.valpha]},object(){const t={};const{channels:r}=o[this.model];const{labels:e}=o[this.model];for(let o=0;o<r;o++)t[e[o]]=this.color[o];this.valpha!==1&&(t.alpha=this.valpha);return t},unitArray(){const t=this.rgb().color;t[0]/=255;t[1]/=255;t[2]/=255;this.valpha!==1&&t.push(this.valpha);return t},unitObject(){const t=this.rgb().object();t.r/=255;t.g/=255;t.b/=255;this.valpha!==1&&(t.alpha=this.valpha);return t},round(t){t=Math.max(t||0,0);return new s([...this.color.map(h(t)),this.valpha],this.model)},alpha(t){return t!==void 0?new s([...this.color,Math.max(0,Math.min(1,t))],this.model):this.valpha},red:i("rgb",0,a(255)),green:i("rgb",1,a(255)),blue:i("rgb",2,a(255)),hue:i(["hsl","hsv","hsl","hwb","hcg"],0,(t=>(t%360+360)%360)),saturationl:i("hsl",1,a(100)),lightness:i("hsl",2,a(100)),saturationv:i("hsv",1,a(100)),value:i("hsv",2,a(100)),chroma:i("hcg",1,a(100)),gray:i("hcg",2,a(100)),white:i("hwb",1,a(100)),wblack:i("hwb",2,a(100)),cyan:i("cmyk",0,a(100)),magenta:i("cmyk",1,a(100)),yellow:i("cmyk",2,a(100)),black:i("cmyk",3,a(100)),x:i("xyz",0,a(95.047)),y:i("xyz",1,a(100)),z:i("xyz",2,a(108.833)),l:i("lab",0,a(100)),a:i("lab",1),b:i("lab",2),keyword(t){return t!==void 0?new s(t):o[this.model].keyword(this.color)},hex(o){return o!==void 0?new s(o):t.to.hex(...this.rgb().round().color)},hexa(o){if(o!==void 0)return new s(o);const r=this.rgb().round().color;let e=Math.round(this.valpha*255).toString(16).toUpperCase();e.length===1&&(e="0"+e);return t.to.hex(...r)+e},rgbNumber(){const t=this.rgb().color;return(t[0]&255)<<16|(t[1]&255)<<8|t[2]&255},luminosity(){const t=this.rgb().color;const o=[];for(const[r,e]of t.entries()){const t=e/255;o[r]=t<=.04045?t/12.92:((t+.055)/1.055)**2.4}return.2126*o[0]+.7152*o[1]+.0722*o[2]},contrast(t){const o=this.luminosity();const r=t.luminosity();return o>r?(o+.05)/(r+.05):(r+.05)/(o+.05)},level(t){const o=this.contrast(t);return o>=7?"AAA":o>=4.5?"AA":""},isDark(){const t=this.rgb().color;const o=(t[0]*2126+t[1]*7152+t[2]*722)/1e4;return o<128},isLight(){return!this.isDark()},negate(){const t=this.rgb();for(let o=0;o<3;o++)t.color[o]=255-t.color[o];return t},lighten(t){const o=this.hsl();o.color[2]+=o.color[2]*t;return o},darken(t){const o=this.hsl();o.color[2]-=o.color[2]*t;return o},saturate(t){const o=this.hsl();o.color[1]+=o.color[1]*t;return o},desaturate(t){const o=this.hsl();o.color[1]-=o.color[1]*t;return o},whiten(t){const o=this.hwb();o.color[1]+=o.color[1]*t;return o},blacken(t){const o=this.hwb();o.color[2]+=o.color[2]*t;return o},grayscale(){const t=this.rgb().color;const o=t[0]*.3+t[1]*.59+t[2]*.11;return s.rgb(o,o,o)},fade(t){return this.alpha(this.valpha-this.valpha*t)},opaquer(t){return this.alpha(this.valpha+this.valpha*t)},rotate(t){const o=this.hsl();let r=o.color[0];r=(r+t)%360;r=r<0?360+r:r;o.color[0]=r;return o},mix(t,o){if(!t||!t.rgb)throw new Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof t);const r=t.rgb();const e=this.rgb();const n=o===void 0?.5:o;const l=2*n-1;const h=r.alpha()-e.alpha();const i=((l*h===-1?l:(l+h)/(1+l*h))+1)/2;const a=1-i;return s.rgb(i*r.red()+a*e.red(),i*r.green()+a*e.green(),i*r.blue()+a*e.blue(),r.alpha()*n+e.alpha()*(1-n))}};for(const t of Object.keys(o)){if(r.includes(t))continue;const{channels:e}=o[t];s.prototype[t]=function(...r){return this.model===t?new s(this):r.length>0?new s(r,t):new s([...c(o[this.model][t].raw(this.color)),this.valpha],t)};s[t]=function(...o){let r=o[0];typeof r==="number"&&(r=u(o,e));return new s(r,t)}}function l(t,o){return Number(t.toFixed(o))}function h(t){return function(o){return l(o,t)}}function i(t,o,r){t=Array.isArray(t)?t:[t];for(const e of t)(n[e]||=[])[o]=r;t=t[0];return function(e){let n;if(e!==void 0){r&&(e=r(e));n=this[t]();n.color[o]=e;return n}n=this[t]().color[o];r&&(n=r(n));return n}}function a(t){return function(o){return Math.max(0,Math.min(t,o))}}function c(t){return Array.isArray(t)?t:[t]}function u(t,o){for(let r=0;r<o;r++)typeof t[r]!=="number"&&(t[r]=0);return t}export{s as default};

